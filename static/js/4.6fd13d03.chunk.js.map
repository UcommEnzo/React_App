{"version":3,"sources":["components/Common/Pagination/Pagination.module.css","components/Users/User.module.css","components/Common/Pagination/Pagination.tsx","components/Users/User.jsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"names":["module","exports","Pagination","totalUsersCount","pageSize","currentPage","onPageChanged","pageCount","Math","ceil","pages","i","push","now","map","p","length","className","c","selectedPage","onClick","event","User","user","followingInProgress","follow","unfollow","to","id","src","photos","small","userPhoto","followed","disabled","some","name","status","Users","users","props","u","key","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","Preloader","React","Component","compose","connect"],"mappings":"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","file":"static/js/4.6fd13d03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Pagination_selectedPage__gGvOY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3Yk1o\"};","import React from \"react\";\r\nimport c from './Pagination.module.css';\r\n\r\ntype PropsType = {\r\n    pageSize: number;\r\n    totalUsersCount: number;\r\n    currentPage: number;\r\n    onPageChanged: (pageNumber: number) => void;\r\n}\r\n\r\nlet Pagination: React.FC<PropsType> = ({totalUsersCount, pageSize,\r\n                                           currentPage, onPageChanged}) => {\r\n\r\n    let pageCount = Math.ceil(totalUsersCount / pageSize);\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let now = currentPage\r\n\r\n    return <div>\r\n            {pages.map(p => {\r\n                if ((p < now + 3 && p > now - 3) ||\r\n                    p === 1 || p === pages.length)\r\n                    return <button className={currentPage === p && c.selectedPage}\r\n                                   onClick={(event) => {\r\n                                       onPageChanged(p);\r\n                                   }}>{p}</button>\r\n            })}\r\n        </div>\r\n}\r\n\r\nexport default Pagination;","import React from \"react\";\r\nimport c from './User.module.css';\r\nimport userPhoto from '../../assets/images/noavatar.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, follow, unfollow}) => {\r\n    return <div className={c.user}>\r\n                <span>\r\n                    <div>\r\n                         <NavLink to={'/profile/' + user.id}>\r\n                             <img src={user.photos.small != null ? user.photos.small : userPhoto}/>\r\n                         </NavLink>\r\n                    </div>\r\n\r\n                <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {unfollow(user.id)}}>Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {follow(user.id)}}>Follow</button>}\r\n                </div>\r\n            </span>\r\n                <span>\r\n            <div>{user.name}</div>\r\n            <div>{user.status}</div>\r\n            </span>\r\n                <span>\r\n            <div>{'user.location.country'}</div>\r\n            <div>{'user.location.city'}</div>\r\n            </span>\r\n            </div>\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Pagination from \"../Common/Pagination/Pagination\";\r\nimport User from \"./User\";\r\nimport {UsersType} from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    pageSize: number;\r\n    totalUsersCount: number;\r\n    currentPage: number;\r\n    onPageChanged: (pageNumber: number) => void;\r\n    users: Array<UsersType>\r\n    followingInProgress: Array<number>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nlet Users: React.FC<PropsType> = ({pageSize, totalUsersCount, users,\r\n                                      currentPage, onPageChanged, ...props}) => {\r\n\r\n    return <div>\r\n\r\n        <Pagination totalUsersCount={totalUsersCount} pageSize={pageSize}\r\n                    currentPage={currentPage} onPageChanged={onPageChanged}/>\r\n        <div>\r\n            {users.map(u => <User key={u.id} unfollow={props.unfollow}\r\n                                        follow={props.follow} user={u}\r\n                                        followingInProgress={props.followingInProgress}/>)\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, requestUsers,\r\n    toggleFollowingProgress,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\nimport {UsersType} from \"../../types/types\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapDispatchPropsType = {\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    totalUsersCount: number\r\n    users: Array<UsersType>\r\n    followingInProgress: Array<number>\r\n}\r\n\r\ntype PropsType = MapDispatchPropsType & MapStatePropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const  {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect<MapStatePropsType, MapDispatchPropsType, any, AppStateType>\r\n    (mapStateToProps, {follow, unfollow, requestUsers})\r\n    (UsersContainer));"],"sourceRoot":""}